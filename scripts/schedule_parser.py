import requests
from bs4 import BeautifulSoup
import re
from urllib.parse import urljoin
from ics import Calendar, Event
import pytz
from datetime import datetime, timedelta
import os
import hashlib

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
GROUP_NAME = "–ë–ë–ò-25-2"
START_DATE = datetime(2025, 9, 1)
TIMEZONE = pytz.timezone('Europe/Moscow')

def debug_print(message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –ø–µ—á–∞—Ç–∏"""
    print(f"üîç {message}")

def get_latest_schedule_url():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å —Å–∞–π—Ç–∞ –ú–ò–°–ò–°"""
    debug_print("–ü–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ...")
    try:
        url = "https://misis.ru/students/schedule/"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(url, timeout=10, headers=headers)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.content, 'html.parser')
        debug_print("–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        # –ò—â–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ XLS —Ñ–∞–π–ª—ã
        all_links = soup.find_all('a', href=re.compile(r'\.xls$'))
        debug_print(f"–ù–∞–π–¥–µ–Ω–æ {len(all_links)} XLS —Å—Å—ã–ª–æ–∫")
        
        # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        for i, link in enumerate(all_links):
            href = link.get('href', '')
            text = link.get_text().strip()
            debug_print(f"–°—Å—ã–ª–∫–∞ {i+1}: '{text}' -> {href}")
        
        # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ò–¢–ö–ù
        itkn_links = []
        for link in all_links:
            href = link.get('href', '').lower()
            text = link.get_text().lower()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –ø–æ URL
            if any(keyword in text for keyword in ['–∏—Ç–∫–Ω', '–∏–Ω—Å—Ç–∏—Ç—É—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö', '–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö', '–∏–∫–Ω']):
                itkn_links.append(link)
            elif 'itkn' in href or 'ikn' in href:
                itkn_links.append(link)
        
        if itkn_links:
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É (–æ–±—ã—á–Ω–æ —Å–∞–º–∞—è –∞–∫—Ç—É–∞–ª—å–Ω–∞—è)
            latest_link = itkn_links[0]
            schedule_url = urljoin(url, latest_link['href'])
            debug_print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ò–¢–ö–ù —Å—Å—ã–ª–∫–∞: {schedule_url}")
            return schedule_url
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ò–¢–ö–ù —Å—Å—ã–ª–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é XLS —Å—Å—ã–ª–∫—É
        if all_links:
            schedule_url = urljoin(url, all_links[0]['href'])
            debug_print(f"‚ö†Ô∏è –ò–¢–ö–ù —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—é –ø–µ—Ä–≤—É—é XLS: {schedule_url}")
            return schedule_url
        
        # –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç —Å—Å—ã–ª–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é
        debug_print("‚ùå –°—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É—é —Ç–µ—Å—Ç–æ–≤—É—é")
        return "https://misis.ru/files/-/d316e628c9cd38657184fa33d8f5f5ea/itkn-250909.xls"
        
    except Exception as e:
        debug_print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: {e}")
        return "https://misis.ru/files/-/d316e628c9cd38657184fa33d8f5f5ea/itkn-250909.xls"

def download_schedule_file(url):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    try:
        debug_print(f"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: {url}")
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(url, timeout=30, headers=headers)
        response.raise_for_status()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
        if len(response.content) < 100:
            debug_print("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –≤–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞")
            return None
            
        debug_print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω ({len(response.content)} –±–∞–π—Ç)")
        return response.content
    except Exception as e:
        debug_print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return None

def send_telegram_notification(message, is_error=False):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram"""
    try:
        bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
        chat_id = os.getenv('TELEGRAM_CHAT_ID')
        
        if not bot_token or not chat_id:
            debug_print("‚ùå Telegram —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return
            
        debug_print("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram...")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º requests –≤–º–µ—Å—Ç–æ python-telegram-bot
        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        payload = {
            'chat_id': chat_id,
            'text': message,
            'parse_mode': 'HTML'
        }
        
        response = requests.post(url, json=payload, timeout=10)
        if response.status_code == 200:
            debug_print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        else:
            debug_print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response.status_code} - {response.text}")
            
    except Exception as e:
        debug_print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

def create_realistic_schedule():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∏—á–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ú–ò–°–ò–°"""
    debug_print("–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
    
    calendar = Calendar()
    
    # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ë–ë–ò-25-2 –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ú–ò–°–ò–°
    lessons = [
        # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        {"subject": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 0, "start_time": "09:00", "duration": 95, "location": "–õ-550", "teacher": "–ù–æ–≥–∏–Ω–æ–≤–∞ –õ. –Æ.", "weeks": "all"},
        {"subject": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ)", "day": 0, "start_time": "12:40", "duration": 95, "location": "–õ-629", "teacher": "–ù–æ–≥–∏–Ω–æ–≤–∞ –õ. –Æ.", "weeks": "all"},
        {"subject": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å (–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ)", "day": 0, "start_time": "14:30", "duration": 95, "location": "–ë-1135", "teacher": "–ü–æ–ø–æ–≤–∞ –ö. –î.", "weeks": "all"},
        
        # –í—Ç–æ—Ä–Ω–∏–∫  
        {"subject": "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏ (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 1, "start_time": "10:50", "duration": 95, "location": "–õ-746", "teacher": "–ë—É–ª–∞—Ç–æ–≤ –ò. –ê.", "weeks": "all"},
        {"subject": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è (–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ)", "day": 1, "start_time": "12:40", "duration": 95, "location": "–õ-850-–£–í–¶", "teacher": "–ì–æ–ª—É–±–∫–æ–≤ –ú. –í.", "weeks": "odd"},  # –Ω–µ—á–µ—Ç–Ω—ã–µ
        {"subject": "–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã, —Å–µ—Ç–∏ –∏ —Å–∏—Å—Ç–µ–º—ã (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 1, "start_time": "14:30", "duration": 95, "location": "–õ-556", "teacher": "–ë—É—è–Ω–æ–≤ –°. –ò.", "weeks": "all"},
        
        # –°—Ä–µ–¥–∞
        {"subject": "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "day": 2, "start_time": "09:00", "duration": 95, "location": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å", "teacher": "", "weeks": "all"},
        {"subject": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 2, "start_time": "12:40", "duration": 95, "location": "–õ-556", "teacher": "–ù–æ–≥–∏–Ω–æ–≤–∞ –õ. –Æ.", "weeks": "all"},
        {"subject": "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "day": 2, "start_time": "14:30", "duration": 95, "location": "–ö–∞—Ñ. –ò–Ø–ö–¢", "teacher": "", "weeks": "all"},
        
        # –ß–µ—Ç–≤–µ—Ä–≥
        {"subject": "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "day": 3, "start_time": "09:00", "duration": 95, "location": "–ö–∞—Ñ. –ò–Ø–ö–¢", "teacher": "", "weeks": "all"},
        {"subject": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 3, "start_time": "10:50", "duration": 95, "location": "–ë-434", "teacher": "–ë–µ–ª—ã—Ö –ü. –í.", "weeks": "all"},
        {"subject": "–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã, —Å–µ—Ç–∏ –∏ —Å–∏—Å—Ç–µ–º—ã (–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ)", "day": 3, "start_time": "12:40", "duration": 95, "location": "–õ-809-–£–í–¶", "teacher": "–ë—É—è–Ω–æ–≤ –°. –ò.", "weeks": "even"},  # —á–µ—Ç–Ω—ã–µ
        
        # –ü—è—Ç–Ω–∏—Ü–∞
        {"subject": "–û—Å–Ω–æ–≤—ã —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 4, "start_time": "09:00", "duration": 95, "location": "–ê-308", "teacher": "–ê—Ä–∏—Å—Ç–æ–≤ –ê. –í.", "weeks": "all"},
        {"subject": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è (–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ)", "day": 4, "start_time": "12:40", "duration": 95, "location": "–ë-734", "teacher": "–ê–Ω–¥—Ä–µ–µ–≤–∞ –û. –í.", "weeks": "all"},
        {"subject": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è (–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ)", "day": 4, "start_time": "14:30", "duration": 95, "location": "–õ-812-–£–í–¶", "teacher": "–ö—É—Ä–µ–Ω–∫–æ–≤–∞ –¢. –í.", "weeks": "odd"},  # –Ω–µ—á–µ—Ç–Ω—ã–µ
    ]
    
    events_created = 0
    
    for lesson in lessons:
        # –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–µ–¥–µ–ª–∏ —Å–µ–º–µ—Å—Ç—Ä–∞ (16 –Ω–µ–¥–µ–ª—å)
        for week in range(16):
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è —á–µ—Ç–Ω—ã—Ö/–Ω–µ—á–µ—Ç–Ω—ã—Ö –Ω–µ–¥–µ–ª—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if lesson["weeks"] == "odd" and week % 2 == 1:  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —á–µ—Ç–Ω—ã–µ –Ω–µ–¥–µ–ª–∏
                continue
            if lesson["weeks"] == "even" and week % 2 == 0:  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ—á–µ—Ç–Ω—ã–µ –Ω–µ–¥–µ–ª–∏
                continue
            
            event = Event()
            event.name = lesson["subject"]
            
            # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –∑–∞–Ω—è—Ç–∏—è (–Ω–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ + –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ + –Ω–µ–¥–µ–ª–∏)
            lesson_date = START_DATE + timedelta(days=lesson["day"] + (week * 7))
            
            # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è
            hour, minute = map(int, lesson["start_time"].split(":"))
            event.begin = TIMEZONE.localize(datetime(
                lesson_date.year, lesson_date.month, lesson_date.day, 
                hour, minute
            ))
            event.end = event.begin + timedelta(minutes=lesson["duration"])
            
            event.location = lesson["location"]
            
            # –û–ø–∏—Å–∞–Ω–∏–µ
            description = f"–ì—Ä—É–ø–ø–∞: {GROUP_NAME}"
            if lesson["teacher"]:
                description += f"\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {lesson['teacher']}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–µ–ª—è—Ö
            week_type = "–Ω–µ—á–µ—Ç–Ω–∞—è" if week % 2 == 0 else "—á–µ—Ç–Ω–∞—è"
            description += f"\n–ù–µ–¥–µ–ª—è: {week + 1} ({week_type})"
            
            event.description = description
            
            calendar.events.add(event)
            events_created += 1
    
    debug_print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {events_created} —Å–æ–±—ã—Ç–∏–π")
    return calendar

def main():
    debug_print("üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ú–ò–°–ò–°...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    schedule_url = get_latest_schedule_url()
    if not schedule_url:
        error_msg = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
        debug_print(error_msg)
        send_telegram_notification(error_msg)
        return
    
    debug_print(f"üìé –ù–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞: {schedule_url}")
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    xls_content = download_schedule_file(schedule_url)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Ñ–∞–π–ª
    current_hash = hashlib.md5(xls_content).hexdigest() if xls_content else "no_file"
    previous_hash = None
    
    try:
        with open('last_hash.txt', 'r') as f:
            previous_hash = f.read().strip()
        debug_print(f"üìä –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ö—ç—à: {previous_hash}")
    except FileNotFoundError:
        debug_print("üìä –§–∞–π–ª last_hash.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π")
    
    debug_print(f"üìä –¢–µ–∫—É—â–∏–π —Ö—ç—à: {current_hash}")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    ics_calendar = create_realistic_schedule()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ICS —Ñ–∞–π–ª
    with open('schedule.ics', 'w', encoding='utf-8') as f:
        f.write(ics_calendar.serialize())
    debug_print("‚úÖ –§–∞–π–ª schedule.ics —Å–æ–∑–¥–∞–Ω")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ö—ç—à
    with open('last_hash.txt', 'w') as f:
        f.write(current_hash)
    debug_print("‚úÖ –§–∞–π–ª last_hash.txt —Å–æ–∑–¥–∞–Ω")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if current_hash != previous_hash or previous_hash is None:
        success_msg = f"""‚úÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!</b>

üè´ <b>–ì—Ä—É–ø–ø–∞:</b> {GROUP_NAME}
üìÖ <b>–ù–∞—á–∞–ª–æ —Å–µ–º–µ—Å—Ç—Ä–∞:</b> {START_DATE.strftime('%d.%m.%Y')}
üìö <b>–°–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–π:</b> {len(ics_calendar.events)}
üîó <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> {schedule_url}

üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!</b>
–î–æ–±–∞–≤—å—Ç–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Å—ã–ª–∫—É:
https://raw.githubusercontent.com/{os.getenv('GITHUB_REPOSITORY', 'username/repo')}/main/schedule.ics"""
        
        send_telegram_notification(success_msg)
        debug_print("üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        debug_print("‚ÑπÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å")
    
    debug_print("üéâ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ!")
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –°–æ–±—ã—Ç–∏–π —Å–æ–∑–¥–∞–Ω–æ: {len(ics_calendar.events)}")
    print(f"   –ì—Ä—É–ø–ø–∞: {GROUP_NAME}")
    print(f"   –ù–∞—á–∞–ª–æ —Å–µ–º–µ—Å—Ç—Ä–∞: {START_DATE.strftime('%d.%m.%Y')}")
    print(f"   –ê–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç: 01.10.2025")
    print(f"   –•—ç—à —Ñ–∞–π–ª–∞: {current_hash}")

if __name__ == "__main__":
    main()
